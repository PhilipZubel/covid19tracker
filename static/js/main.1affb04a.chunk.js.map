{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/CardItem.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","CardItem","props","CardContent","Typography","color","gutterBottom","id","variant","start","end","name","value","duration","separator","Date","date","toDateString","description","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","key","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","reportDate","fetchCountries","countries","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","console","log","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","titleMargin","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.1affb04a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1Yhhz\",\"card\":\"Cards_card__2sXFL\",\"infected\":\"Cards_infected__1dIXU\",\"recovered\":\"Cards_recovered__2gI1U\",\"deaths\":\"Cards_deaths__18aUW\"};","import React from \"react\";\r\nimport { CardContent, Typography } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport styles from \"./CardItem.module.css\";\r\n\r\nconst CardItem = (props) => {\r\n  return (\r\n    <CardContent>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {props.id}\r\n      </Typography>\r\n      <Typography variant=\"h5\">\r\n        <CountUp\r\n          start={0}\r\n          end={props.name.value}\r\n          duration={2.5}\r\n          separator=\",\"\r\n        />\r\n      </Typography>\r\n      <Typography color=\"textSecondary\">\r\n        {new Date(props.date).toDateString()}\r\n      </Typography>\r\n      <Typography variant=\"body2\">{props.description}</Typography>\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n","import React from \"react\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport CardItem from \"./CardItem\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardItem\r\n            name={confirmed}\r\n            date={lastUpdate}\r\n            key=\"confirmed\"\r\n            id=\"Infected\"\r\n            description=\"Number of infected of COVID-19\"\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardItem\r\n            name={recovered}\r\n            date={lastUpdate}\r\n            key=\"recovered\"\r\n            id=\"Recovered\"\r\n            description=\"Number of recoveries of COVID-19\"\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardItem\r\n            name={deaths}\r\n            date={lastUpdate}\r\n            key=\"deaths\"\r\n            id=\"Deaths\"\r\n            description=\"Number of deaths from COVID-19\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(changeableUrl);\r\n\r\n    const modifiedData = {\r\n      confirmed: data.confirmed,\r\n      recovered: data.recovered,\r\n      deaths: data.deaths,\r\n      lastUpdate: data.lastUpdate,\r\n    };\r\n\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setDailyData]);\r\n\r\n  const lineChart =\r\n    dailyData.length !== 0 ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: \"Infected\",\r\n              borderColor: \"#3333ff\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"red\",\r\n              backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,0,255,0.5)\",\r\n              \"rgba(0,255,0,0.5)\",\r\n              \"rgba(255,0,0,0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  console.log(fetchedCountries);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => {\r\n          handleCountryChange(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData(this.state.country);\r\n    this.setState({ data: data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n    // set state\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.titleMargin}>\r\n          <Typography variant=\"h4\">COVID 19 Tracker</Typography>\r\n        </div>\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport App from \"./App.js\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2v3RG\",\"titleMargin\":\"App_titleMargin__3UzlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1BvyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__fNI6H\"};"],"sourceRoot":""}